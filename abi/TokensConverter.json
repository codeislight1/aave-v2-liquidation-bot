{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "contract ILendingPoolAddressesProvider",
          "name": "_provider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_TREASURY",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "sellToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ERC20",
          "name": "buyToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "boughtAmount",
          "type": "uint256"
        }
      ],
      "name": "BoughtTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedRewardTokens",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CBETH",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LENDING_POOL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REVISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TREASURY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "approveProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "swapCallData",
              "type": "bytes"
            }
          ],
          "internalType": "struct TokensConverter.SimpleTrade[]",
          "name": "trades",
          "type": "tuple[]"
        }
      ],
      "name": "convert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC20",
              "name": "sellToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "swapCallData",
              "type": "bytes"
            }
          ],
          "internalType": "struct TokensConverter.Trade[]",
          "name": "trades",
          "type": "tuple[]"
        }
      ],
      "name": "convertWithSpender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILendingPoolAddressesProvider",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "provider",
      "outputs": [
        {
          "internalType": "contract ILendingPoolAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recoverToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "updateKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x610100604052600080553480156200001657600080fd5b5060405162001ad538038062001ad58339810160408190526200003991620001a1565b6001600160a01b0383166200006b5760405162461bcd60e51b81526004016200006290620001f4565b60405180910390fd5b6001600160a01b038116620000945760405162461bcd60e51b815260040162000062906200024a565b6001600160601b0319606084811b821660805283811b821660e05282901b1660c05260408051630261bf8b60e01b815290516000916001600160a01b03851691630261bf8b91600480820192602092909190829003018186803b158015620000fb57600080fd5b505afa15801562000110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013691906200017b565b90506001600160a01b038116620001615760405162461bcd60e51b815260040162000062906200021f565b60601b6001600160601b03191660a052506200028e915050565b6000602082840312156200018d578081fd5b81516200019a8162000275565b9392505050565b600080600060608486031215620001b6578182fd5b8351620001c38162000275565b6020850151909350620001d68162000275565b6040850151909250620001e98162000275565b809150509250925092565b6020808252601190820152701830b2323932b9b9afb932b1b2b4bb32b960791b604082015260600190565b6020808252601190820152701830b2323932b9b9afb83937bb34b232b960791b604082015260600190565b60208082526011908201527030616464726573735f747265617375727960781b604082015260600190565b6001600160a01b03811681146200028b57600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6117e2620002f3600039806102fa528061068852806107bd5280610aed52508061040e52806104eb52508061052752806108ee52806109c652508061056e528061065a52506117e26000f3fe60806040526004361061010d5760003560e01c8063b29a814011610095578063c89d3aba11610064578063c89d3aba14610279578063dcfa2d6e14610299578063dde43cba146102ae578063f14210a6146102d0578063f6326fb3146102f057610114565b8063b29a81401461020f578063b4dcfc771461022f578063c4d66de814610244578063c7c30be11461026457610114565b80636b926c07116100dc5780636b926c071461019057806397610f30146101b057806397790217146101c5578063aced1661146101e5578063ad5c4648146101fa57610114565b8063085d4883146101195780630b692dba146101445780632d2c5565146101665780634e71d92d1461017b57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e6102f8565b60405161013b91906115bd565b60405180910390f35b34801561015057600080fd5b5061016461015f3660046114ca565b61031c565b005b34801561017257600080fd5b5061012e61040c565b34801561018757600080fd5b50610164610430565b34801561019c57600080fd5b506101646101ab36600461150a565b610607565b3480156101bc57600080fd5b5061012e610658565b3480156101d157600080fd5b506101646101e0366004611492565b61067c565b3480156101f157600080fd5b5061012e610797565b34801561020657600080fd5b5061012e6107a6565b34801561021b57600080fd5b5061016461022a366004611552565b6107b1565b34801561023b57600080fd5b5061012e6108ec565b34801561025057600080fd5b5061016461025f366004611492565b610910565b34801561027057600080fd5b5061012e610a5b565b34801561028557600080fd5b5061016461029436600461150a565b610a73565b3480156102a557600080fd5b5061012e610ac4565b3480156102ba57600080fd5b506102c3610adc565b60405161013b91906116bd565b3480156102dc57600080fd5b506101646102eb36600461157d565b610ae1565b610164610bbc565b7f000000000000000000000000000000000000000000000000000000000000000081565b6034546001600160a01b0316331461033357600080fd5b8060005b818110156104065783838281811061034b57fe5b90506020020160208101906103609190611492565b6001600160a01b031663095ea7b373def1c0ded9bec7f1a1670819833240f027b25eff6000196040518363ffffffff1660e01b81526004016103a39291906115d1565b602060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190611532565b6103fe57600080fd5b600101610337565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b8152600090732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22906370a082319061046a9030906004016115bd565b60206040518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611595565b905080156106045760006104cf826005610c19565b9050610510732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec227f000000000000000000000000000000000000000000000000000000000000000083610c62565b60405163e8eda9df60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e8eda9df9061059990732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec2290858703907f0000000000000000000000000000000000000000000000000000000000000000906000906004016115ea565b600060405180830381600087803b1580156105b357600080fd5b505af11580156105c7573d6000803e3d6000fd5b505050507f6f2430be5a1b132969a7e7c44a32b293f06e8bd445339f08b0ade181b6dc9e51826040516105fa91906116bd565b60405180910390a1505b50565b6034546001600160a01b0316331461061e57600080fd5b8060005b818110156104065761065084848381811061063957fe5b905060200281019061064b919061170b565b610cb4565b600101610622565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aecda3786040518163ffffffff1660e01b815260040160206040518083038186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906114ae565b6001600160a01b03161461072a57600080fd5b6034546001600160a01b0382811691161480159061075057506001600160a01b03811615155b6107755760405162461bcd60e51b815260040161076c90611672565b60405180910390fd5b603480546001600160a01b0319166001600160a01b0392909216919091179055565b6034546001600160a01b031681565b6006602160991b0181565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aecda3786040518163ffffffff1660e01b815260040160206040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c91906114ae565b6001600160a01b03161461085f57600080fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb9061088d90339085906004016115d1565b602060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df9190611532565b6108e857600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061091a610ead565b60015490915060ff16806109315750610931610eb2565b8061093d575060005481115b6109785760405162461bcd60e51b815260040180806020018281038252602e815260200180611755602e913960400191505060405180910390fd5b60015460ff16158015610997576001805460ff19168117905560008290555b60405163095ea7b360e01b8152732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec229063095ea7b3906109f2907f000000000000000000000000000000000000000000000000000000000000000090600019906004016115d1565b602060405180830381600087803b158015610a0c57600080fd5b505af1158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a449190611532565b508015610a56576001805460ff191690555b505050565b73def1c0ded9bec7f1a1670819833240f027b25eff81565b6034546001600160a01b03163314610a8a57600080fd5b8060005b8181101561040657610abc848483818110610aa557fe5b9050602002810190610ab7919061172a565b610eb8565b600101610a8e565b732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec2281565b600181565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aecda3786040518163ffffffff1660e01b815260040160206040518083038186803b158015610b4457600080fd5b505afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c91906114ae565b6001600160a01b031614610b8f57600080fd5b604051339082156108fc029083906000818181858888f193505050501580156108e8573d6000803e3d6000fd5b6006602160991b016001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610bfe57600080fd5b505af1158015610c12573d6000803e3d6000fd5b5050505050565b6000610c5b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611118565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a569084906111ba565b6040516370a0823160e01b8152732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec229060009082906370a0823190610cf09030906004016115bd565b60206040518083038186803b158015610d0857600080fd5b505afa158015610d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d409190611595565b9050600073def1c0ded9bec7f1a1670819833240f027b25eff81610d6760208701876116c6565b604051610d759291906115ad565b60006040518083038185875af1925050503d8060008114610db2576040519150601f19603f3d011682016040523d82523d6000602084013e610db7565b606091505b5050905080610dd85760405162461bcd60e51b815260040161076c9061163b565b610e5e82846001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610e0891906115bd565b60206040518083038186803b158015610e2057600080fd5b505afa158015610e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e589190611595565b90611371565b91507f6dfe06ca5961b140f839316b505392ab4a18727b308bfb7d9275f8ed1cc99f04610e8e6020860186611492565b8484604051610e9f93929190611617565b60405180910390a150505050565b600190565b303b1590565b6000610ec76020830183611492565b6040516370a0823160e01b8152909150600090732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22906370a0823190610f049030906004016115bd565b60206040518083038186803b158015610f1c57600080fd5b505afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f549190611595565b90506001600160a01b03821663095ea7b3610f756040860160208701611492565b6000196040518363ffffffff1660e01b8152600401610f959291906115d1565b602060405180830381600087803b158015610faf57600080fd5b505af1158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe79190611532565b610ff057600080fd5b600073def1c0ded9bec7f1a1670819833240f027b25eff8161101560408701876116c6565b6040516110239291906115ad565b60006040518083038185875af1925050503d8060008114611060576040519150601f19603f3d011682016040523d82523d6000602084013e611065565b606091505b50509050806110865760405162461bcd60e51b815260040161076c90611693565b6040516370a0823160e01b81526110c3908390732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22906370a0823190610e089030906004016115bd565b91507f6dfe06ca5961b140f839316b505392ab4a18727b308bfb7d9275f8ed1cc99f046110f36020860186611492565b732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec2284604051610e9f93929190611617565b600081836111a45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611169578181015183820152602001611151565b50505050905090810190601f1680156111965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816111b057fe5b0495945050505050565b6111cc826001600160a01b03166113b3565b61121d576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600080836001600160a01b0316836040518082805190602001908083835b6020831061125a5780518252601f19909201916020918201910161123b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146112bc576040519150601f19603f3d011682016040523d82523d6000602084013e6112c1565b606091505b509150915081611318576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156104065780806020019051602081101561133457600080fd5b50516104065760405162461bcd60e51b815260040180806020018281038252602a815260200180611783602a913960400191505060405180910390fd5b6000610c5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113ef565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906113e757508115155b949350505050565b600081848411156114415760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611169578181015183820152602001611151565b505050900390565b60008083601f84011261145a578182fd5b50813567ffffffffffffffff811115611471578182fd5b602083019150836020808302850101111561148b57600080fd5b9250929050565b6000602082840312156114a3578081fd5b8135610c5b8161173f565b6000602082840312156114bf578081fd5b8151610c5b8161173f565b600080602083850312156114dc578081fd5b823567ffffffffffffffff8111156114f2578182fd5b6114fe85828601611449565b90969095509350505050565b6000806020838503121561151c578182fd5b823567ffffffffffffffff8111156114f2578283fd5b600060208284031215611543578081fd5b81518015158114610c5b578182fd5b60008060408385031215611564578182fd5b823561156f8161173f565b946020939093013593505050565b60006020828403121561158e578081fd5b5035919050565b6000602082840312156115a6578081fd5b5051919050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526017908201527f53494d504c455f535741505f43414c4c5f4641494c4544000000000000000000604082015260600190565b60208082526007908201526610b5b2b2b832b960c91b604082015260600190565b60208082526010908201526f14d5d05417d0d0531317d1905253115160821b604082015260600190565b90815260200190565b6000808335601e198436030181126116dc578283fd5b83018035915067ffffffffffffffff8211156116f6578283fd5b60200191503681900382131561148b57600080fd5b60008235603e19833603018112611720578182fd5b9190910192915050565b60008235605e19833603018112611720578182fd5b6001600160a01b038116811461060457600080fdfe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220136570913217ad10f8a44bc9fa7fd5d3546f8f78d50521edc7f1a8b5798f7ba564736f6c63430007060033",
    "sourceMap": "742:6506:100:-:0;;;946:1:76;904:43;;2321:484:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2431:23:100;;2423:53;;;;-1:-1:-1;;;2423:53:100;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2495:23:100;;2487:53;;;;-1:-1:-1;;;2487:53:100;;;;;;;:::i;:::-;-1:-1:-1;;;2551:19:100;;;;;;;2581:20;;;;;;;2612;;;;;;2666:26;;;-1:-1:-1;;;2666:26:100;;;;2643:20;;-1:-1:-1;;;;;2581:20:100;;;-1:-1:-1;;2666:26:100;;;;;-1:-1:-1;;2666:26:100;;;;;;;;2581:20;2666:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2643:49;-1:-1:-1;;;;;;2711:26:100;;2703:56;;;;-1:-1:-1;;;2703:56:100;;;;;;;:::i;:::-;2770:27;;-1:-1:-1;;2770:27:100;;;-1:-1:-1;742:6506:100;;-1:-1:-1;;742:6506:100;14:263:101;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;195:9;189:16;214:33;241:5;214:33;:::i;:::-;266:5;95:182;-1:-1:-1;;;95:182:101:o;282:574::-;;;;478:2;466:9;457:7;453:23;449:32;446:2;;;499:6;491;484:22;446:2;536:9;530:16;555:33;582:5;555:33;:::i;:::-;657:2;642:18;;636:25;607:5;;-1:-1:-1;670:35:101;636:25;670:35;:::i;:::-;776:2;761:18;;755:25;724:7;;-1:-1:-1;789:35:101;755:25;789:35;:::i;:::-;843:7;833:17;;;436:420;;;;;:::o;861:341::-;1063:2;1045:21;;;1102:2;1082:18;;;1075:30;-1:-1:-1;;;1136:2:101;1121:18;;1114:47;1193:2;1178:18;;1035:167::o;1207:341::-;1409:2;1391:21;;;1448:2;1428:18;;;1421:30;-1:-1:-1;;;1482:2:101;1467:18;;1460:47;1539:2;1524:18;;1381:167::o;1553:341::-;1755:2;1737:21;;;1794:2;1774:18;;;1767:30;-1:-1:-1;;;1828:2:101;1813:18;;1806:47;1885:2;1870:18;;1727:167::o;1899:133::-;-1:-1:-1;;;;;1976:31:101;;1966:42;;1956:2;;2022:1;2019;2012:12;1956:2;1946:86;:::o;:::-;742:6506:100;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061010d5760003560e01c8063b29a814011610095578063c89d3aba11610064578063c89d3aba14610279578063dcfa2d6e14610299578063dde43cba146102ae578063f14210a6146102d0578063f6326fb3146102f057610114565b8063b29a81401461020f578063b4dcfc771461022f578063c4d66de814610244578063c7c30be11461026457610114565b80636b926c07116100dc5780636b926c071461019057806397610f30146101b057806397790217146101c5578063aced1661146101e5578063ad5c4648146101fa57610114565b8063085d4883146101195780630b692dba146101445780632d2c5565146101665780634e71d92d1461017b57610114565b3661011457005b600080fd5b34801561012557600080fd5b5061012e6102f8565b60405161013b91906115bd565b60405180910390f35b34801561015057600080fd5b5061016461015f3660046114ca565b61031c565b005b34801561017257600080fd5b5061012e61040c565b34801561018757600080fd5b50610164610430565b34801561019c57600080fd5b506101646101ab36600461150a565b610607565b3480156101bc57600080fd5b5061012e610658565b3480156101d157600080fd5b506101646101e0366004611492565b61067c565b3480156101f157600080fd5b5061012e610797565b34801561020657600080fd5b5061012e6107a6565b34801561021b57600080fd5b5061016461022a366004611552565b6107b1565b34801561023b57600080fd5b5061012e6108ec565b34801561025057600080fd5b5061016461025f366004611492565b610910565b34801561027057600080fd5b5061012e610a5b565b34801561028557600080fd5b5061016461029436600461150a565b610a73565b3480156102a557600080fd5b5061012e610ac4565b3480156102ba57600080fd5b506102c3610adc565b60405161013b91906116bd565b3480156102dc57600080fd5b506101646102eb36600461157d565b610ae1565b610164610bbc565b7f000000000000000000000000000000000000000000000000000000000000000081565b6034546001600160a01b0316331461033357600080fd5b8060005b818110156104065783838281811061034b57fe5b90506020020160208101906103609190611492565b6001600160a01b031663095ea7b373def1c0ded9bec7f1a1670819833240f027b25eff6000196040518363ffffffff1660e01b81526004016103a39291906115d1565b602060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190611532565b6103fe57600080fd5b600101610337565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b8152600090732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22906370a082319061046a9030906004016115bd565b60206040518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611595565b905080156106045760006104cf826005610c19565b9050610510732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec227f000000000000000000000000000000000000000000000000000000000000000083610c62565b60405163e8eda9df60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e8eda9df9061059990732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec2290858703907f0000000000000000000000000000000000000000000000000000000000000000906000906004016115ea565b600060405180830381600087803b1580156105b357600080fd5b505af11580156105c7573d6000803e3d6000fd5b505050507f6f2430be5a1b132969a7e7c44a32b293f06e8bd445339f08b0ade181b6dc9e51826040516105fa91906116bd565b60405180910390a1505b50565b6034546001600160a01b0316331461061e57600080fd5b8060005b818110156104065761065084848381811061063957fe5b905060200281019061064b919061170b565b610cb4565b600101610622565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aecda3786040518163ffffffff1660e01b815260040160206040518083038186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906114ae565b6001600160a01b03161461072a57600080fd5b6034546001600160a01b0382811691161480159061075057506001600160a01b03811615155b6107755760405162461bcd60e51b815260040161076c90611672565b60405180910390fd5b603480546001600160a01b0319166001600160a01b0392909216919091179055565b6034546001600160a01b031681565b6006602160991b0181565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aecda3786040518163ffffffff1660e01b815260040160206040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c91906114ae565b6001600160a01b03161461085f57600080fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb9061088d90339085906004016115d1565b602060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df9190611532565b6108e857600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061091a610ead565b60015490915060ff16806109315750610931610eb2565b8061093d575060005481115b6109785760405162461bcd60e51b815260040180806020018281038252602e815260200180611755602e913960400191505060405180910390fd5b60015460ff16158015610997576001805460ff19168117905560008290555b60405163095ea7b360e01b8152732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec229063095ea7b3906109f2907f000000000000000000000000000000000000000000000000000000000000000090600019906004016115d1565b602060405180830381600087803b158015610a0c57600080fd5b505af1158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a449190611532565b508015610a56576001805460ff191690555b505050565b73def1c0ded9bec7f1a1670819833240f027b25eff81565b6034546001600160a01b03163314610a8a57600080fd5b8060005b8181101561040657610abc848483818110610aa557fe5b9050602002810190610ab7919061172a565b610eb8565b600101610a8e565b732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec2281565b600181565b336001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aecda3786040518163ffffffff1660e01b815260040160206040518083038186803b158015610b4457600080fd5b505afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c91906114ae565b6001600160a01b031614610b8f57600080fd5b604051339082156108fc029083906000818181858888f193505050501580156108e8573d6000803e3d6000fd5b6006602160991b016001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610bfe57600080fd5b505af1158015610c12573d6000803e3d6000fd5b5050505050565b6000610c5b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611118565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a569084906111ba565b6040516370a0823160e01b8152732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec229060009082906370a0823190610cf09030906004016115bd565b60206040518083038186803b158015610d0857600080fd5b505afa158015610d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d409190611595565b9050600073def1c0ded9bec7f1a1670819833240f027b25eff81610d6760208701876116c6565b604051610d759291906115ad565b60006040518083038185875af1925050503d8060008114610db2576040519150601f19603f3d011682016040523d82523d6000602084013e610db7565b606091505b5050905080610dd85760405162461bcd60e51b815260040161076c9061163b565b610e5e82846001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610e0891906115bd565b60206040518083038186803b158015610e2057600080fd5b505afa158015610e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e589190611595565b90611371565b91507f6dfe06ca5961b140f839316b505392ab4a18727b308bfb7d9275f8ed1cc99f04610e8e6020860186611492565b8484604051610e9f93929190611617565b60405180910390a150505050565b600190565b303b1590565b6000610ec76020830183611492565b6040516370a0823160e01b8152909150600090732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22906370a0823190610f049030906004016115bd565b60206040518083038186803b158015610f1c57600080fd5b505afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f549190611595565b90506001600160a01b03821663095ea7b3610f756040860160208701611492565b6000196040518363ffffffff1660e01b8152600401610f959291906115d1565b602060405180830381600087803b158015610faf57600080fd5b505af1158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe79190611532565b610ff057600080fd5b600073def1c0ded9bec7f1a1670819833240f027b25eff8161101560408701876116c6565b6040516110239291906115ad565b60006040518083038185875af1925050503d8060008114611060576040519150601f19603f3d011682016040523d82523d6000602084013e611065565b606091505b50509050806110865760405162461bcd60e51b815260040161076c90611693565b6040516370a0823160e01b81526110c3908390732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22906370a0823190610e089030906004016115bd565b91507f6dfe06ca5961b140f839316b505392ab4a18727b308bfb7d9275f8ed1cc99f046110f36020860186611492565b732ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec2284604051610e9f93929190611617565b600081836111a45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611169578181015183820152602001611151565b50505050905090810190601f1680156111965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816111b057fe5b0495945050505050565b6111cc826001600160a01b03166113b3565b61121d576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600080836001600160a01b0316836040518082805190602001908083835b6020831061125a5780518252601f19909201916020918201910161123b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146112bc576040519150601f19603f3d011682016040523d82523d6000602084013e6112c1565b606091505b509150915081611318576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156104065780806020019051602081101561133457600080fd5b50516104065760405162461bcd60e51b815260040180806020018281038252602a815260200180611783602a913960400191505060405180910390fd5b6000610c5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113ef565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906113e757508115155b949350505050565b600081848411156114415760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611169578181015183820152602001611151565b505050900390565b60008083601f84011261145a578182fd5b50813567ffffffffffffffff811115611471578182fd5b602083019150836020808302850101111561148b57600080fd5b9250929050565b6000602082840312156114a3578081fd5b8135610c5b8161173f565b6000602082840312156114bf578081fd5b8151610c5b8161173f565b600080602083850312156114dc578081fd5b823567ffffffffffffffff8111156114f2578182fd5b6114fe85828601611449565b90969095509350505050565b6000806020838503121561151c578182fd5b823567ffffffffffffffff8111156114f2578283fd5b600060208284031215611543578081fd5b81518015158114610c5b578182fd5b60008060408385031215611564578182fd5b823561156f8161173f565b946020939093013593505050565b60006020828403121561158e578081fd5b5035919050565b6000602082840312156115a6578081fd5b5051919050565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03948516815260208101939093529216604082015261ffff909116606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208082526017908201527f53494d504c455f535741505f43414c4c5f4641494c4544000000000000000000604082015260600190565b60208082526007908201526610b5b2b2b832b960c91b604082015260600190565b60208082526010908201526f14d5d05417d0d0531317d1905253115160821b604082015260600190565b90815260200190565b6000808335601e198436030181126116dc578283fd5b83018035915067ffffffffffffffff8211156116f6578283fd5b60200191503681900382131561148b57600080fd5b60008235603e19833603018112611720578182fd5b9190910192915050565b60008235605e19833603018112611720578182fd5b6001600160a01b038116811461060457600080fdfe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220136570913217ad10f8a44bc9fa7fd5d3546f8f78d50521edc7f1a8b5798f7ba564736f6c63430007060033",
    "sourceMap": "742:6506:100:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7008:237;;;;;;;;;;-1:-1:-1;7008:237:100;;;;;:::i;:::-;;:::i;:::-;;1057:33;;;;;;;;;;;;;:::i;5388:472::-;;;;;;;;;;;;;:::i;6792:208::-;;;;;;;;;;-1:-1:-1;6792:208:100;;;;;:::i;:::-;;:::i;974:32::-;;;;;;;;;;;;;:::i;6352:166::-;;;;;;;;;;-1:-1:-1;6352:166:100;;;;;:::i;:::-;;:::i;880:21::-;;;;;;;;;;;;;:::i;1201:78::-;;;;;;;;;;;;;:::i;6005:132::-;;;;;;;;;;-1:-1:-1;6005:132:100;;;;;:::i;:::-;;:::i;1013:37::-;;;;;;;;;;;;;:::i;5066:153::-;;;;;;;;;;-1:-1:-1;5066:153:100;;;;;:::i;:::-;;:::i;1372:82::-;;;;;;;;;;;;;:::i;6577:207::-;;;;;;;;;;-1:-1:-1;6577:207:100;;;;;:::i;:::-;;:::i;1286:79::-;;;;;;;;;;;;;:::i;1161:33::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6208:102::-;;;;;;;;;;-1:-1:-1;6208:102:100;;;;;:::i;:::-;;:::i;5290:90::-;;;:::i;1097:55::-;;;:::o;7008:237::-;2129:6;;-1:-1:-1;;;;;2129:6:100;2139:10;2129:20;2121:29;;;;;;7101:7;7087:11:::1;7126:112;7143:6;7139:1;:10;7126:112;;;7179:7;;7187:1;7179:10;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;::::0;-1:-1:-1;;;7179:46:100;;-1:-1:-1;;;;;7179:18:100;;;::::1;::::0;::::1;::::0;:46:::1;::::0;1412:42:::1;::::0;-1:-1:-1;;;7179:46:100::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7171:55;;;::::0;::::1;;7151:3;;7126:112;;;;2161:1;7008:237:::0;;:::o;1057:33::-;;;:::o;5388:472::-;5440:30;;-1:-1:-1;;;5440:30:100;;5425:12;;1322:42;;-1:-1:-1;;5440:30:100;;5464:4;;5440:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5425:45;-1:-1:-1;5485:11:100;;5481:372;;5513:18;5534:14;:7;5546:1;5534:11;:14::i;:::-;5513:35;-1:-1:-1;5563:43:100;1322:42;5582:8;5513:35;5563:18;:43::i;:::-;5623:170;;-1:-1:-1;;;5623:170:100;;5636:12;-1:-1:-1;;;;;5623:34:100;;-1:-1:-1;;5623:170:100;;1322:42;;5709:23;;;;5751:7;;5777:1;;5623:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5813:28;5833:7;5813:28;;;;;;:::i;:::-;;;;;;;;5481:372;;5388:472;:::o;6792:208::-;2129:6;;-1:-1:-1;;;;;2129:6:100;2139:10;2129:20;2121:29;;;;;;6885:6;6871:11:::1;6909:84;6926:6;6922:1;:10;6909:84;;;6954:27;6971:6;;6978:1;6971:9;;;;;;;;;;;;;;;;;;:::i;:::-;6954:16;:27::i;:::-;6934:3;;6909:84;;974:32:::0;;;:::o;6352:166::-;2218:23;;;-1:-1:-1;;;2218:23:100;;;;2245:10;;2218:8;-1:-1:-1;;;;;2218:21:100;;;;:23;;;;;;;;;;;;;;;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2218:37:100;;2210:46;;;;;;6429:6:::1;::::0;-1:-1:-1;;;;;6429:17:100;;::::1;:6:::0;::::1;:17;::::0;::::1;::::0;:42:::1;;-1:-1:-1::0;;;;;;6450:21:100;::::1;::::0;::::1;6429:42;6421:62;;;::::0;-1:-1:-1;;;6421:62:100;;::::1;::::0;::::1;;;:::i;:::-;;;;;;;;;6494:6;:16:::0;;-1:-1:-1;;;;;;6494:16:100::1;-1:-1:-1::0;;;;;6494:16:100;;;::::1;::::0;;;::::1;::::0;;6352:166::o;880:21::-;;;-1:-1:-1;;;;;880:21:100;;:::o;1201:78::-;-1:-1:-1;;;;;1201:78:100;:::o;6005:132::-;2218:23;;;-1:-1:-1;;;2218:23:100;;;;2245:10;;2218:8;-1:-1:-1;;;;;2218:21:100;;;;:23;;;;;;;;;;;;;;;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2218:37:100;;2210:46;;;;;;6094:34:::1;::::0;-1:-1:-1;;;6094:34:100;;-1:-1:-1;;;;;6094:14:100;::::1;::::0;-1:-1:-1;;6094:34:100::1;::::0;6109:10:::1;::::0;6121:6;;6094:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6086:43;;;::::0;::::1;;6005:132:::0;;:::o;1013:37::-;;;:::o;5066:153::-;1193:16:76;1212:13;:11;:13::i;:::-;1248:12;;1193:32;;-1:-1:-1;1248:12:76;;;:31;;;1264:15;:13;:15::i;:::-;1248:69;;;;1294:23;;1283:8;:34;1248:69;1232:149;;;;-1:-1:-1;;;1232:149:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1413:12;;;;1412:13;1432:99;;;;1476:4;1461:19;;-1:-1:-1;;1461:19:76;;;;;-1:-1:-1;1489:34:76;;;1432:99;5174:37:100::1;::::0;-1:-1:-1;;;5174:37:100;;1322:42:::1;::::0;-1:-1:-1;;5174:37:100::1;::::0;5188:12:::1;::::0;-1:-1:-1;;;5174:37:100::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1553:14:76::0;1549:57;;;1578:12;:20;;-1:-1:-1;;1578:20:76;;;1549:57;5066:153:100;;;:::o;1372:82::-;1412:42;1372:82;:::o;6577:207::-;2129:6;;-1:-1:-1;;;;;2129:6:100;2139:10;2129:20;2121:29;;;;;;6675:6;6661:11:::1;6699:78;6716:6;6712:1;:10;6699:78;;;6744:21;6755:6;;6762:1;6755:9;;;;;;;;;;;;;;;;;;:::i;:::-;6744:10;:21::i;:::-;6724:3;;6699:78;;1286:79:::0;1322:42;1286:79;:::o;1161:33::-;1193:1;1161:33;:::o;6208:102::-;2218:23;;;-1:-1:-1;;;2218:23:100;;;;2245:10;;2218:8;-1:-1:-1;;;;;2218:21:100;;;;:23;;;;;;;;;;;;;;;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2218:37:100;;2210:46;;;;;;6275:27:::1;::::0;:10:::1;::::0;:27;::::1;;;::::0;6295:6;;6275:27:::1;::::0;;;6295:6;6275:10;:27;::::1;;;;;;;;;;;;;::::0;::::1;;;;5290:90:::0;5340:32;;;-1:-1:-1;;;5340:32:100;;;;-1:-1:-1;;;;;;5340:12:100;;5360:9;;5340:32;;;;;;;;;;;;;;;5360:9;-1:-1:-1;5340:32:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5290:90::o;3007:126:22:-;3065:7;3088:39;3092:1;3095;3088:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3081:46;3007:126;-1:-1:-1;;;3007:126:22:o;736:190:21:-;861:58;;;-1:-1:-1;;;;;861:58:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;861:58:21;-1:-1:-1;;;861:58:21;;;835:85;;854:5;;835:18;:85::i;4218:788:100:-;4432:33;;-1:-1:-1;;;4432:33:100;;1322:42;;4292:14;;1322:42;;-1:-1:-1;;4432:33:100;;4459:4;;4432:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4409:56;-1:-1:-1;4649:12:100;1412:42;4649:12;4696:18;;;;:5;:18;:::i;:::-;4667:48;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4648:67;;;4734:7;4726:43;;;;-1:-1:-1;;;4726:43:100;;;;;;;:::i;:::-;4878:33;;-1:-1:-1;;;4878:33:100;;:51;;4916:12;;-1:-1:-1;;;;;4878:18:100;;;;;:33;;4905:4;;4878:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;:51::i;:::-;4863:66;-1:-1:-1;4945:53:100;4958:15;;;;:5;:15;:::i;:::-;4975:8;4985:12;4945:53;;;;;;;;:::i;:::-;;;;;;;;4218:788;;;;:::o;2867:106::-;1193:1;2867:106;:::o;1917:522:76:-;2396:9;2384:22;2426:7;1917:522;:::o;3059:1073:100:-;3121:15;3139;;;;:5;:15;:::i;:::-;3272:30;;-1:-1:-1;;;3272:30:100;;3121:33;;-1:-1:-1;3249:20:100;;1322:42;;-1:-1:-1;;3272:30:100;;3296:4;;3272:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3249:53;-1:-1:-1;;;;;;3560:17:100;;;3578:13;;;;;;;;:::i;:::-;-1:-1:-1;;3560:45:100;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3552:54;;;;;;3788:12;1412:42;3788:12;3835:18;;;;:5;:18;:::i;:::-;3806:48;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3787:67;;;3873:7;3865:36;;;;-1:-1:-1;;;3865:36:100;;;;;;;:::i;:::-;4010:30;;-1:-1:-1;;;4010:30:100;;:48;;4045:12;;1322:42;;-1:-1:-1;;4010:30:100;;4034:4;;4010:30;;;:::i;:48::-;3995:63;-1:-1:-1;4074:50:100;4087:15;;;;:5;:15;:::i;:::-;1322:42;4111:12;4074:50;;;;;;;;:::i;3597:343:22:-;3703:7;3797:12;3790:5;3782:28;;;;-1:-1:-1;;;3782:28:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3817:9;3833:1;3829;:5;;;;;;;3597:343;-1:-1:-1;;;;;3597:343:22:o;1522:567:21:-;1606:27;-1:-1:-1;;;;;1606:25:21;;;:27::i;:::-;1598:71;;;;;-1:-1:-1;;;1598:71:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;1735:12;1749:23;1784:5;-1:-1:-1;;;;;1776:19:21;1796:4;1776:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1776:25:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:67;;;;1816:7;1808:52;;;;;-1:-1:-1;;;1808:52:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:17;;:21;1869:215;;2010:10;1999:30;;;;;;;;;;;;;;;-1:-1:-1;1999:30:21;1991:85;;;;-1:-1:-1;;;1991:85:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1298:130:22;1356:7;1379:43;1383:1;1386;1379:43;;;;;;;;;;;;;;;;;:3;:43::i;709:597:15:-;769:4;1216:20;;1060:66;1257:23;;;;;;:42;;-1:-1:-1;1284:15:15;;;1257:42;1249:51;709:597;-1:-1:-1;;;;709:597:15:o;1703:198:22:-;1809:7;1841:12;1833:6;;;;1825:29;;;;-1:-1:-1;;;1825:29:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1825:29:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;1873:5:22;;;1703:198::o;14:400:101:-;;;143:3;136:4;128:6;124:17;120:27;110:2;;168:8;158;151:26;110:2;-1:-1:-1;198:20:101;;241:18;230:30;;227:2;;;280:8;270;263:26;227:2;324:4;316:6;312:17;300:29;;387:3;380:4;372;364:6;360:17;352:6;348:30;344:41;341:50;338:2;;;404:1;401;394:12;338:2;100:314;;;;;:::o;419:259::-;;531:2;519:9;510:7;506:23;502:32;499:2;;;552:6;544;537:22;499:2;596:9;583:23;615:33;642:5;615:33;:::i;683:263::-;;806:2;794:9;785:7;781:23;777:32;774:2;;;827:6;819;812:22;774:2;864:9;858:16;883:33;910:5;883:33;:::i;951:474::-;;;1113:2;1101:9;1092:7;1088:23;1084:32;1081:2;;;1134:6;1126;1119:22;1081:2;1179:9;1166:23;1212:18;1204:6;1201:30;1198:2;;;1249:6;1241;1234:22;1198:2;1293:72;1357:7;1348:6;1337:9;1333:22;1293:72;:::i;:::-;1384:8;;1267:98;;-1:-1:-1;1071:354:101;-1:-1:-1;;;;1071:354:101:o;1430:491::-;;;1609:2;1597:9;1588:7;1584:23;1580:32;1577:2;;;1630:6;1622;1615:22;1577:2;1675:9;1662:23;1708:18;1700:6;1697:30;1694:2;;;1745:6;1737;1730:22;2416:297;;2536:2;2524:9;2515:7;2511:23;2507:32;2504:2;;;2557:6;2549;2542:22;2504:2;2594:9;2588:16;2647:5;2640:13;2633:21;2626:5;2623:32;2613:2;;2674:6;2666;2659:22;2997:342;;;3141:2;3129:9;3120:7;3116:23;3112:32;3109:2;;;3162:6;3154;3147:22;3109:2;3206:9;3193:23;3225:33;3252:5;3225:33;:::i;:::-;3277:5;3329:2;3314:18;;;;3301:32;;-1:-1:-1;;;3099:240:101:o;3647:190::-;;3759:2;3747:9;3738:7;3734:23;3730:32;3727:2;;;3780:6;3772;3765:22;3727:2;-1:-1:-1;3808:23:101;;3717:120;-1:-1:-1;3717:120:101:o;3842:194::-;;3965:2;3953:9;3944:7;3940:23;3936:32;3933:2;;;3986:6;3978;3971:22;3933:2;-1:-1:-1;4014:16:101;;3923:113;-1:-1:-1;3923:113:101:o;4041:273::-;;4224:6;4216;4211:3;4198:33;4250:16;;4275:15;;;4250:16;4188:126;-1:-1:-1;4188:126:101:o;4319:203::-;-1:-1:-1;;;;;4483:32:101;;;;4465:51;;4453:2;4438:18;;4420:102::o;4743:282::-;-1:-1:-1;;;;;4943:32:101;;;;4925:51;;5007:2;4992:18;;4985:34;4913:2;4898:18;;4880:145::o;5309:467::-;-1:-1:-1;;;;;5603:15:101;;;5585:34;;5650:2;5635:18;;5628:34;;;;5698:15;;5693:2;5678:18;;5671:43;5762:6;5750:19;;;5745:2;5730:18;;5723:47;5534:3;5519:19;;5501:275::o;6004:405::-;-1:-1:-1;;;;;6292:15:101;;;6274:34;;6344:15;;;;6339:2;6324:18;;6317:43;6391:2;6376:18;;6369:34;;;;6224:2;6209:18;;6191:218::o;6884:347::-;7086:2;7068:21;;;7125:2;7105:18;;;7098:30;7164:25;7159:2;7144:18;;7137:53;7222:2;7207:18;;7058:173::o;7236:330::-;7438:2;7420:21;;;7477:1;7457:18;;;7450:29;-1:-1:-1;;;7510:2:101;7495:18;;7488:37;7557:2;7542:18;;7410:156::o;7571:340::-;7773:2;7755:21;;;7812:2;7792:18;;;7785:30;-1:-1:-1;;;7846:2:101;7831:18;;7824:46;7902:2;7887:18;;7745:166::o;7916:177::-;8062:25;;;8050:2;8035:18;;8017:76::o;8098:533::-;;;8241:11;8228:25;8335:2;8331:7;8320:8;8304:14;8300:29;8296:43;8276:18;8272:68;8262:2;;8357:4;8351;8344:18;8262:2;8387:33;;8439:20;;;-1:-1:-1;8482:18:101;8471:30;;8468:2;;;8517:4;8511;8504:18;8468:2;8553:4;8541:17;;-1:-1:-1;8584:14:101;8580:27;;;8570:38;;8567:2;;;8621:1;8618;8611:12;8636:335;;8792:11;8779:25;8886:2;8882:7;8871:8;8855:14;8851:29;8847:43;8827:18;8823:68;8813:2;;8908:4;8902;8895:18;8813:2;8932:33;;;;;8743:228;-1:-1:-1;;8743:228:101:o;8976:329::-;;9126:11;9113:25;9220:2;9216:7;9205:8;9189:14;9185:29;9181:43;9161:18;9157:68;9147:2;;9242:4;9236;9229:18;9310:133;-1:-1:-1;;;;;9387:31:101;;9377:42;;9367:2;;9433:1;9430;9423:12",
    "linkReferences": {},
    "immutableReferences": {
      "66732": [
        {
          "start": 1390,
          "length": 32
        },
        {
          "start": 1626,
          "length": 32
        }
      ],
      "66734": [
        {
          "start": 1319,
          "length": 32
        },
        {
          "start": 2286,
          "length": 32
        },
        {
          "start": 2502,
          "length": 32
        }
      ],
      "66736": [
        {
          "start": 1038,
          "length": 32
        },
        {
          "start": 1259,
          "length": 32
        }
      ],
      "66738": [
        {
          "start": 762,
          "length": 32
        },
        {
          "start": 1672,
          "length": 32
        },
        {
          "start": 1981,
          "length": 32
        },
        {
          "start": 2797,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CBETH()": "dcfa2d6e",
    "LENDING_POOL()": "b4dcfc77",
    "REVISION()": "dde43cba",
    "STAKING()": "97610f30",
    "TREASURY()": "2d2c5565",
    "WETH()": "ad5c4648",
    "approveProxy(address[])": "0b692dba",
    "claim()": "4e71d92d",
    "convert((address,bytes)[])": "6b926c07",
    "convertWithSpender((address,address,bytes)[])": "c89d3aba",
    "depositETH()": "f6326fb3",
    "exchangeProxy()": "c7c30be1",
    "initialize(address)": "c4d66de8",
    "keeper()": "aced1661",
    "provider()": "085d4883",
    "recoverToken(address,uint256)": "b29a8140",
    "updateKeeper(address)": "97790217",
    "withdrawETH(uint256)": "f14210a6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"_provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_TREASURY\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ERC20\",\"name\":\"buyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"boughtAmount\",\"type\":\"uint256\"}],\"name\":\"BoughtTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedRewardTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CBETH\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDING_POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"approveProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct TokensConverter.SimpleTrade[]\",\"name\":\"trades\",\"type\":\"tuple[]\"}],\"name\":\"convert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"sellToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct TokensConverter.Trade[]\",\"name\":\"trades\",\"type\":\"tuple[]\"}],\"name\":\"convertWithSpender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keeper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"updateKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/TokensConverter.sol\":\"TokensConverter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xadc8c75ed871e7aa2ec5272b9d02c4bdf7acc5228644017be16bd5196de25944\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://76eeb1a9c7f5d841f03af9cafbef9674711f3e16ffb36c4c203b8037ba003b77\",\"dweb:/ipfs/Qmax9fSQrQLNLhwp9ZkJTkzy3f5SYE4ectfsgnW82UexfX\"]},\"src/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xa5684dfeaa8570a8656e8be5256d046b87e4c0746758ca21bc8fa46ae85a1b8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36278f12a1bac76c37df31b290e7a67f3c0f594b5d7db53194aed435f9bd0ba\",\"dweb:/ipfs/Qmcv39DVWeTCuNZZxn3KNREv4BL2E1HE7fYYQvmKsFWrUM\"]},\"src/dependencies/openzeppelin/contracts/ERC20.sol\":{\"keccak256\":\"0x54ddc38c131745bbba31db242494e7c9d27ef2b70bd7541b8448ed6b9601858f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c503b085ab588d33831a8e9635a2546372f964dd5288606e323300c46d4a111b\",\"dweb:/ipfs/QmUKtNMoH5nRQvPjc6UzPrrR3zaKqG3CsSjVnFUbPRotfd\"]},\"src/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x5c2292f2e4c9ce6889a3aeff155b54e7d4aa2038625bc3686160d3fc6f81b4ba\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://25dbaab53d4eaebe2b3f5edad45108e93c002377dd7a18029cd9289c49c208ec\",\"dweb:/ipfs/QmRo6XTKdFaVuMzRRNaf5fHzkhW8p3C16rJoxJX2VcZhec\"]},\"src/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"keccak256\":\"0x04537fc8036c092e5076c1319b2360b422cff71f17d93b3e86108111112de53d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae9c00685fe65d5d408a929010ac14e3eeeff2b113fa7bf25db8dc8c3410f7\",\"dweb:/ipfs/QmTxXYUF3HFY8EqUUQR1WhK7UhhjBfY1GrZ9TbVBGTXa6j\"]},\"src/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0x0d9b19630afc8456db8807b5b27cc378547044469e3d98f05dd62881e543b745\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://de0345e396f39eb34b113ea526ff99e959176da99848d9ad8b0d23f1d17e1cae\",\"dweb:/ipfs/QmSGeakgem88Egr5T2sNvov7cywtsXYUbDfRSSRsdtEMvW\"]},\"src/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x65809e3f4d12c38fa09435c2efac1d2d3eb6e2a82462f329a5db95723d60ce3f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://b781696d51b4962131764ef2d5f6eaf04df1d4b8b93cbb9929017c5e74d14ca5\",\"dweb:/ipfs/QmW84NVVzNeyaH8Gn5tfjnr3eqg6YGWp3cbtKwPo84WGns\"]},\"src/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x13f29d5be9de347934cb594901a22e6ac6cc4e1f9abf727fb949be74ca0bd126\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://d6f964d1110ad7ac8d85ccdef57579e7fbf3a7e7ada114e1ab085f4b6e7ae959\",\"dweb:/ipfs/Qma83DzUZxnk2hhbhaz8eAcbCPMmjA8z3Jx1HnYeNxswoS\"]},\"src/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x9830262caf0bc34f3d2fd680e6e5fd3c5f81093380a73ea4a749adc2221aed1a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://776589a33223be9d9d6c6211e53fcafe350bbc5753c250f62a622af6f3d4fcaf\",\"dweb:/ipfs/QmXnPuegCRD34DVVFmCPVKZPpDV7APsRutH8nNkyUWQJkk\"]},\"src/interfaces/IWETH.sol\":{\"keccak256\":\"0x52f138ba5a44bebce75c7d365dcc20e56cad6664be327950b282ad65414e2cbb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://1c2ffdcf94381b9301610923af87dbf0ce1771ebc9364aec9afb6aa0b86c6ef0\",\"dweb:/ipfs/QmXxPmDho6rV3fgCwJYs719ri4CqLiaPQQWRFCU9qng9K6\"]},\"src/protocol/libraries/aave-upgradeability/VersionedInitializable.sol\":{\"keccak256\":\"0x91d9f9392e48e985b88d1c1b3af9592b58cf94477a335ab69177f0f7013c1ee8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9d147f6af44586c1caf0fbe04935c131e1c95a5336790c2ad0db6d11f4bf9213\",\"dweb:/ipfs/Qma7CMkjSWcPM47fXDypFN8bifhTVhaueD3XfozUXq7Yqk\"]},\"src/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x82934775a4be97d17acef6a9a631032a0a7260d8a2ae07a389b7f51ac089567a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://40c444c3910545318839d2032b4006e12b8212ba705e848e3b83dbe9fdb96092\",\"dweb:/ipfs/QmcVAmxszoLesvBaMdGEpB9YUHvx2p9777zPcWeUAE4m2c\"]},\"src/staking/TokensConverter.sol\":{\"keccak256\":\"0x72edb2b83c1412f5b780b5ba305c6513cfd23bd19e87f27d486584ae5dfebd33\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://34fd710c693e4502505a1b51e4afc22467ecf1e443546d33e704a0defd5fc574\",\"dweb:/ipfs/Qmbr1xKc6FJi2xwqn434GoU2WQze3kJUXerB6UoNKwjVkm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "contract ILendingPoolAddressesProvider",
              "name": "_provider",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_TREASURY",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "sellToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ERC20",
              "name": "buyToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "boughtAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BoughtTokens",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimedRewardTokens",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CBETH",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LENDING_POOL",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REVISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TREASURY",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "contract IWETH",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "_tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveProxy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "struct TokensConverter.SimpleTrade[]",
              "name": "trades",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "swapCallData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "convert"
        },
        {
          "inputs": [
            {
              "internalType": "struct TokensConverter.Trade[]",
              "name": "trades",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract ERC20",
                  "name": "sellToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "swapCallData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "convertWithSpender"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositETH"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "exchangeProxy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILendingPoolAddressesProvider",
              "name": "provider",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "keeper",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "provider",
          "outputs": [
            {
              "internalType": "contract ILendingPoolAddressesProvider",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recoverToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_keeper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateKeeper"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawETH"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/TokensConverter.sol": "TokensConverter"
      },
      "libraries": {}
    },
    "sources": {
      "src/dependencies/openzeppelin/contracts/Address.sol": {
        "keccak256": "0xadc8c75ed871e7aa2ec5272b9d02c4bdf7acc5228644017be16bd5196de25944",
        "urls": [
          "bzz-raw://76eeb1a9c7f5d841f03af9cafbef9674711f3e16ffb36c4c203b8037ba003b77",
          "dweb:/ipfs/Qmax9fSQrQLNLhwp9ZkJTkzy3f5SYE4ectfsgnW82UexfX"
        ],
        "license": "agpl-3.0"
      },
      "src/dependencies/openzeppelin/contracts/Context.sol": {
        "keccak256": "0xa5684dfeaa8570a8656e8be5256d046b87e4c0746758ca21bc8fa46ae85a1b8b",
        "urls": [
          "bzz-raw://d36278f12a1bac76c37df31b290e7a67f3c0f594b5d7db53194aed435f9bd0ba",
          "dweb:/ipfs/Qmcv39DVWeTCuNZZxn3KNREv4BL2E1HE7fYYQvmKsFWrUM"
        ],
        "license": "MIT"
      },
      "src/dependencies/openzeppelin/contracts/ERC20.sol": {
        "keccak256": "0x54ddc38c131745bbba31db242494e7c9d27ef2b70bd7541b8448ed6b9601858f",
        "urls": [
          "bzz-raw://c503b085ab588d33831a8e9635a2546372f964dd5288606e323300c46d4a111b",
          "dweb:/ipfs/QmUKtNMoH5nRQvPjc6UzPrrR3zaKqG3CsSjVnFUbPRotfd"
        ],
        "license": "MIT"
      },
      "src/dependencies/openzeppelin/contracts/IERC20.sol": {
        "keccak256": "0x5c2292f2e4c9ce6889a3aeff155b54e7d4aa2038625bc3686160d3fc6f81b4ba",
        "urls": [
          "bzz-raw://25dbaab53d4eaebe2b3f5edad45108e93c002377dd7a18029cd9289c49c208ec",
          "dweb:/ipfs/QmRo6XTKdFaVuMzRRNaf5fHzkhW8p3C16rJoxJX2VcZhec"
        ],
        "license": "agpl-3.0"
      },
      "src/dependencies/openzeppelin/contracts/SafeERC20.sol": {
        "keccak256": "0x04537fc8036c092e5076c1319b2360b422cff71f17d93b3e86108111112de53d",
        "urls": [
          "bzz-raw://bbae9c00685fe65d5d408a929010ac14e3eeeff2b113fa7bf25db8dc8c3410f7",
          "dweb:/ipfs/QmTxXYUF3HFY8EqUUQR1WhK7UhhjBfY1GrZ9TbVBGTXa6j"
        ],
        "license": "MIT"
      },
      "src/dependencies/openzeppelin/contracts/SafeMath.sol": {
        "keccak256": "0x0d9b19630afc8456db8807b5b27cc378547044469e3d98f05dd62881e543b745",
        "urls": [
          "bzz-raw://de0345e396f39eb34b113ea526ff99e959176da99848d9ad8b0d23f1d17e1cae",
          "dweb:/ipfs/QmSGeakgem88Egr5T2sNvov7cywtsXYUbDfRSSRsdtEMvW"
        ],
        "license": "agpl-3.0"
      },
      "src/interfaces/ILendingPool.sol": {
        "keccak256": "0x65809e3f4d12c38fa09435c2efac1d2d3eb6e2a82462f329a5db95723d60ce3f",
        "urls": [
          "bzz-raw://b781696d51b4962131764ef2d5f6eaf04df1d4b8b93cbb9929017c5e74d14ca5",
          "dweb:/ipfs/QmW84NVVzNeyaH8Gn5tfjnr3eqg6YGWp3cbtKwPo84WGns"
        ],
        "license": "agpl-3.0"
      },
      "src/interfaces/ILendingPoolAddressesProvider.sol": {
        "keccak256": "0x13f29d5be9de347934cb594901a22e6ac6cc4e1f9abf727fb949be74ca0bd126",
        "urls": [
          "bzz-raw://d6f964d1110ad7ac8d85ccdef57579e7fbf3a7e7ada114e1ab085f4b6e7ae959",
          "dweb:/ipfs/Qma83DzUZxnk2hhbhaz8eAcbCPMmjA8z3Jx1HnYeNxswoS"
        ],
        "license": "agpl-3.0"
      },
      "src/interfaces/IUniswapV2Pair.sol": {
        "keccak256": "0x9830262caf0bc34f3d2fd680e6e5fd3c5f81093380a73ea4a749adc2221aed1a",
        "urls": [
          "bzz-raw://776589a33223be9d9d6c6211e53fcafe350bbc5753c250f62a622af6f3d4fcaf",
          "dweb:/ipfs/QmXnPuegCRD34DVVFmCPVKZPpDV7APsRutH8nNkyUWQJkk"
        ],
        "license": "agpl-3.0"
      },
      "src/interfaces/IWETH.sol": {
        "keccak256": "0x52f138ba5a44bebce75c7d365dcc20e56cad6664be327950b282ad65414e2cbb",
        "urls": [
          "bzz-raw://1c2ffdcf94381b9301610923af87dbf0ce1771ebc9364aec9afb6aa0b86c6ef0",
          "dweb:/ipfs/QmXxPmDho6rV3fgCwJYs719ri4CqLiaPQQWRFCU9qng9K6"
        ],
        "license": "agpl-3.0"
      },
      "src/protocol/libraries/aave-upgradeability/VersionedInitializable.sol": {
        "keccak256": "0x91d9f9392e48e985b88d1c1b3af9592b58cf94477a335ab69177f0f7013c1ee8",
        "urls": [
          "bzz-raw://9d147f6af44586c1caf0fbe04935c131e1c95a5336790c2ad0db6d11f4bf9213",
          "dweb:/ipfs/Qma7CMkjSWcPM47fXDypFN8bifhTVhaueD3XfozUXq7Yqk"
        ],
        "license": "agpl-3.0"
      },
      "src/protocol/libraries/types/DataTypes.sol": {
        "keccak256": "0x82934775a4be97d17acef6a9a631032a0a7260d8a2ae07a389b7f51ac089567a",
        "urls": [
          "bzz-raw://40c444c3910545318839d2032b4006e12b8212ba705e848e3b83dbe9fdb96092",
          "dweb:/ipfs/QmcVAmxszoLesvBaMdGEpB9YUHvx2p9777zPcWeUAE4m2c"
        ],
        "license": "agpl-3.0"
      },
      "src/staking/TokensConverter.sol": {
        "keccak256": "0x72edb2b83c1412f5b780b5ba305c6513cfd23bd19e87f27d486584ae5dfebd33",
        "urls": [
          "bzz-raw://34fd710c693e4502505a1b51e4afc22467ecf1e443546d33e704a0defd5fc574",
          "dweb:/ipfs/Qmbr1xKc6FJi2xwqn434GoU2WQze3kJUXerB6UoNKwjVkm"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/TokensConverter.sol",
    "id": 67248,
    "exportedSymbols": {
      "ERC20": [
        40417
      ],
      "ILendingPool": [
        43338
      ],
      "ILendingPoolAddressesProvider": [
        43499
      ],
      "IUniswapV2Pair": [
        44346
      ],
      "IWETH": [
        44420
      ],
      "SafeERC20": [
        40783
      ],
      "SafeMath": [
        40979
      ],
      "TokensConverter": [
        67247
      ],
      "VersionedInitializable": [
        52920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:7212:100",
    "nodes": [
      {
        "id": 66703,
        "nodeType": "PragmaDirective",
        "src": "38:22:100",
        "nodes": [],
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ]
      },
      {
        "id": 66704,
        "nodeType": "PragmaDirective",
        "src": "62:19:100",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 66706,
        "nodeType": "ImportDirective",
        "src": "83:71:100",
        "nodes": [],
        "absolutePath": "src/dependencies/openzeppelin/contracts/ERC20.sol",
        "file": "../dependencies/openzeppelin/contracts/ERC20.sol",
        "scope": 67248,
        "sourceUnit": 40418,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66705,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "91:5:100",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66708,
        "nodeType": "ImportDirective",
        "src": "156:79:100",
        "nodes": [],
        "absolutePath": "src/dependencies/openzeppelin/contracts/SafeERC20.sol",
        "file": "../dependencies/openzeppelin/contracts/SafeERC20.sol",
        "scope": 67248,
        "sourceUnit": 40784,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66707,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "164:9:100",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66710,
        "nodeType": "ImportDirective",
        "src": "237:77:100",
        "nodes": [],
        "absolutePath": "src/dependencies/openzeppelin/contracts/SafeMath.sol",
        "file": "../dependencies/openzeppelin/contracts/SafeMath.sol",
        "scope": 67248,
        "sourceUnit": 40980,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66709,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "245:8:100",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66712,
        "nodeType": "ImportDirective",
        "src": "316:64:100",
        "nodes": [],
        "absolutePath": "src/interfaces/IUniswapV2Pair.sol",
        "file": "../interfaces/IUniswapV2Pair.sol",
        "scope": 67248,
        "sourceUnit": 44347,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66711,
              "name": "IUniswapV2Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "324:14:100",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66714,
        "nodeType": "ImportDirective",
        "src": "382:46:100",
        "nodes": [],
        "absolutePath": "src/interfaces/IWETH.sol",
        "file": "../interfaces/IWETH.sol",
        "scope": 67248,
        "sourceUnit": 44421,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66713,
              "name": "IWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "390:5:100",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66716,
        "nodeType": "ImportDirective",
        "src": "430:60:100",
        "nodes": [],
        "absolutePath": "src/interfaces/ILendingPool.sol",
        "file": "../interfaces/ILendingPool.sol",
        "scope": 67248,
        "sourceUnit": 43339,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66715,
              "name": "ILendingPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "438:12:100",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66718,
        "nodeType": "ImportDirective",
        "src": "492:94:100",
        "nodes": [],
        "absolutePath": "src/interfaces/ILendingPoolAddressesProvider.sol",
        "file": "../interfaces/ILendingPoolAddressesProvider.sol",
        "scope": 67248,
        "sourceUnit": 43500,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66717,
              "name": "ILendingPoolAddressesProvider",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "500:29:100",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66720,
        "nodeType": "ImportDirective",
        "src": "588:108:100",
        "nodes": [],
        "absolutePath": "src/protocol/libraries/aave-upgradeability/VersionedInitializable.sol",
        "file": "../protocol/libraries/aave-upgradeability/VersionedInitializable.sol",
        "scope": 67248,
        "sourceUnit": 52921,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66719,
              "name": "VersionedInitializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "596:22:100",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67247,
        "nodeType": "ContractDefinition",
        "src": "742:6506:100",
        "nodes": [
          {
            "id": 66725,
            "nodeType": "UsingForDirective",
            "src": "800:24:100",
            "nodes": [],
            "libraryName": {
              "id": 66723,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 40979,
              "src": "806:8:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$40979",
                "typeString": "library SafeMath"
              }
            },
            "typeName": {
              "id": 66724,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "819:4:100",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 66728,
            "nodeType": "UsingForDirective",
            "src": "830:26:100",
            "nodes": [],
            "libraryName": {
              "id": 66726,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 40783,
              "src": "836:9:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$40783",
                "typeString": "library SafeERC20"
              }
            },
            "typeName": {
              "id": 66727,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 40417,
              "src": "850:5:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$40417",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 66730,
            "nodeType": "VariableDeclaration",
            "src": "880:21:100",
            "nodes": [],
            "constant": false,
            "functionSelector": "aced1661",
            "mutability": "mutable",
            "name": "keeper",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66729,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "880:7:100",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66732,
            "nodeType": "VariableDeclaration",
            "src": "974:32:100",
            "nodes": [],
            "constant": false,
            "functionSelector": "97610f30",
            "mutability": "immutable",
            "name": "STAKING",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66731,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "974:7:100",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66734,
            "nodeType": "VariableDeclaration",
            "src": "1013:37:100",
            "nodes": [],
            "constant": false,
            "functionSelector": "b4dcfc77",
            "mutability": "immutable",
            "name": "LENDING_POOL",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66733,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1013:7:100",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66736,
            "nodeType": "VariableDeclaration",
            "src": "1057:33:100",
            "nodes": [],
            "constant": false,
            "functionSelector": "2d2c5565",
            "mutability": "immutable",
            "name": "TREASURY",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66735,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1057:7:100",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66738,
            "nodeType": "VariableDeclaration",
            "src": "1097:55:100",
            "nodes": [],
            "constant": false,
            "functionSelector": "085d4883",
            "mutability": "immutable",
            "name": "provider",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
              "typeString": "contract ILendingPoolAddressesProvider"
            },
            "typeName": {
              "id": 66737,
              "name": "ILendingPoolAddressesProvider",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 43499,
              "src": "1097:29:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                "typeString": "contract ILendingPoolAddressesProvider"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66741,
            "nodeType": "VariableDeclaration",
            "src": "1161:33:100",
            "nodes": [],
            "constant": true,
            "functionSelector": "dde43cba",
            "mutability": "constant",
            "name": "REVISION",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66739,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1161:4:100",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 66740,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1193:1:100",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 66746,
            "nodeType": "VariableDeclaration",
            "src": "1201:78:100",
            "nodes": [],
            "constant": true,
            "functionSelector": "ad5c4648",
            "mutability": "constant",
            "name": "WETH",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$44420",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 66742,
              "name": "IWETH",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 44420,
              "src": "1201:5:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$44420",
                "typeString": "contract IWETH"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                  "id": 66744,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1236:42:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x4200000000000000000000000000000000000006"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 66743,
                "name": "IWETH",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44420,
                "src": "1230:5:100",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IWETH_$44420_$",
                  "typeString": "type(contract IWETH)"
                }
              },
              "id": 66745,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1230:49:100",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$44420",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66751,
            "nodeType": "VariableDeclaration",
            "src": "1286:79:100",
            "nodes": [],
            "constant": true,
            "functionSelector": "dcfa2d6e",
            "mutability": "constant",
            "name": "CBETH",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$40417",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 66747,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 40417,
              "src": "1286:5:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$40417",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307832416533463145633746314635303132434645616230313835626663376161336366304445633232",
                  "id": 66749,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1322:42:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x2Ae3F1Ec7F1F5012CFEab0185bfc7aa3cf0DEc22"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 66748,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 40417,
                "src": "1316:5:100",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$40417_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 66750,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1316:49:100",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$40417",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66754,
            "nodeType": "VariableDeclaration",
            "src": "1372:82:100",
            "nodes": [],
            "constant": true,
            "functionSelector": "c7c30be1",
            "mutability": "constant",
            "name": "exchangeProxy",
            "scope": 67247,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66752,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1372:7:100",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844656631433064656439626563374631613136373038313938333332343066303237623235456646",
              "id": 66753,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1412:42:100",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xDef1C0ded9bec7F1a1670819833240f027b25EfF"
            },
            "visibility": "public"
          },
          {
            "id": 66761,
            "nodeType": "StructDefinition",
            "src": "1463:281:100",
            "nodes": [],
            "canonicalName": "TokensConverter.Trade",
            "members": [
              {
                "constant": false,
                "id": 66756,
                "mutability": "mutable",
                "name": "sellToken",
                "nodeType": "VariableDeclaration",
                "scope": 66761,
                "src": "1551:15:100",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$40417",
                  "typeString": "contract ERC20"
                },
                "typeName": {
                  "id": 66755,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 40417,
                  "src": "1551:5:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$40417",
                    "typeString": "contract ERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66758,
                "mutability": "mutable",
                "name": "spender",
                "nodeType": "VariableDeclaration",
                "scope": 66761,
                "src": "1640:15:100",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 66757,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1640:7:100",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66760,
                "mutability": "mutable",
                "name": "swapCallData",
                "nodeType": "VariableDeclaration",
                "scope": 66761,
                "src": "1718:18:100",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 66759,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1718:5:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "scope": 67247,
            "visibility": "public"
          },
          {
            "id": 66766,
            "nodeType": "StructDefinition",
            "src": "1752:198:100",
            "nodes": [],
            "canonicalName": "TokensConverter.SimpleTrade",
            "members": [
              {
                "constant": false,
                "id": 66763,
                "mutability": "mutable",
                "name": "sellToken",
                "nodeType": "VariableDeclaration",
                "scope": 66766,
                "src": "1846:15:100",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$40417",
                  "typeString": "contract ERC20"
                },
                "typeName": {
                  "id": 66762,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 40417,
                  "src": "1846:5:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$40417",
                    "typeString": "contract ERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66765,
                "mutability": "mutable",
                "name": "swapCallData",
                "nodeType": "VariableDeclaration",
                "scope": 66766,
                "src": "1924:18:100",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 66764,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1924:5:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SimpleTrade",
            "scope": 67247,
            "visibility": "public"
          },
          {
            "id": 66774,
            "nodeType": "EventDefinition",
            "src": "1958:74:100",
            "nodes": [],
            "anonymous": false,
            "name": "BoughtTokens",
            "parameters": {
              "id": 66773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66768,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sellToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 66774,
                  "src": "1977:15:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$40417",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 66767,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40417,
                    "src": "1977:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$40417",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66770,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 66774,
                  "src": "1994:14:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$40417",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 66769,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40417,
                    "src": "1994:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$40417",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66772,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "boughtAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 66774,
                  "src": "2010:20:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1976:55:100"
            }
          },
          {
            "id": 66778,
            "nodeType": "EventDefinition",
            "src": "2038:42:100",
            "nodes": [],
            "anonymous": false,
            "name": "ClaimedRewardTokens",
            "parameters": {
              "id": 66777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66776,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 66778,
                  "src": "2064:14:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2063:16:100"
            }
          },
          {
            "id": 66789,
            "nodeType": "ModifierDefinition",
            "src": "2088:82:100",
            "nodes": [],
            "body": {
              "id": 66788,
              "nodeType": "Block",
              "src": "2110:60:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66781,
                          "name": "keeper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66730,
                          "src": "2129:6:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 66782,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2139:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 66783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2139:10:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2129:20:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66780,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2121:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 66785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:29:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66786,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:29:100"
                },
                {
                  "id": 66787,
                  "nodeType": "PlaceholderStatement",
                  "src": "2161:1:100"
                }
              ]
            },
            "name": "onlyKeeper",
            "parameters": {
              "id": 66779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:2:100"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 66802,
            "nodeType": "ModifierDefinition",
            "src": "2178:98:100",
            "nodes": [],
            "body": {
              "id": 66801,
              "nodeType": "Block",
              "src": "2199:77:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 66792,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66738,
                              "src": "2218:8:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                                "typeString": "contract ILendingPoolAddressesProvider"
                              }
                            },
                            "id": 66793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPoolAdmin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43463,
                            "src": "2218:21:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 66794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2218:23:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 66795,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2245:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 66796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2245:10:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2218:37:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2210:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 66798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:46:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66799,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:46:100"
                },
                {
                  "id": 66800,
                  "nodeType": "PlaceholderStatement",
                  "src": "2267:1:100"
                }
              ]
            },
            "name": "onlyAdmin",
            "parameters": {
              "id": 66790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2196:2:100"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 66806,
            "nodeType": "FunctionDefinition",
            "src": "2284:29:100",
            "nodes": [],
            "body": {
              "id": 66805,
              "nodeType": "Block",
              "src": "2311:2:100",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "parameters": {
              "id": 66803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2291:2:100"
            },
            "returnParameters": {
              "id": 66804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2311:0:100"
            },
            "scope": 67247,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66868,
            "nodeType": "FunctionDefinition",
            "src": "2321:484:100",
            "nodes": [],
            "body": {
              "id": 66867,
              "nodeType": "Block",
              "src": "2412:393:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66816,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66808,
                          "src": "2431:9:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 66819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2452:1:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 66818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2444:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66817,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2444:7:100",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2444:10:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2431:23:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30616464726573735f7265636569766572",
                        "id": 66822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2456:19:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09d2b38ab7d495744ca39e931a8dc456f8e1c151bd0d1e0669f970e9517a2d87",
                          "typeString": "literal_string \"0address_receiver\""
                        },
                        "value": "0address_receiver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09d2b38ab7d495744ca39e931a8dc456f8e1c151bd0d1e0669f970e9517a2d87",
                          "typeString": "literal_string \"0address_receiver\""
                        }
                      ],
                      "id": 66815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2423:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2423:53:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66824,
                  "nodeType": "ExpressionStatement",
                  "src": "2423:53:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66826,
                          "name": "_TREASURY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66812,
                          "src": "2495:9:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 66829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2516:1:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 66828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2508:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66827,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2508:7:100",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2508:10:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2495:23:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30616464726573735f7472656173757279",
                        "id": 66832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2520:19:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe75a46663aa4a5ea124ee40dd81501b56eb5a6d843818dd0221e4338fd0cb37",
                          "typeString": "literal_string \"0address_treasury\""
                        },
                        "value": "0address_treasury"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe75a46663aa4a5ea124ee40dd81501b56eb5a6d843818dd0221e4338fd0cb37",
                          "typeString": "literal_string \"0address_treasury\""
                        }
                      ],
                      "id": 66825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2487:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:53:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66834,
                  "nodeType": "ExpressionStatement",
                  "src": "2487:53:100"
                },
                {
                  "expression": {
                    "id": 66837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66835,
                      "name": "STAKING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66732,
                      "src": "2551:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66836,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66808,
                      "src": "2561:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2551:19:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66838,
                  "nodeType": "ExpressionStatement",
                  "src": "2551:19:100"
                },
                {
                  "expression": {
                    "id": 66841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66839,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66738,
                      "src": "2581:8:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                        "typeString": "contract ILendingPoolAddressesProvider"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66840,
                      "name": "_provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66810,
                      "src": "2592:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                        "typeString": "contract ILendingPoolAddressesProvider"
                      }
                    },
                    "src": "2581:20:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                      "typeString": "contract ILendingPoolAddressesProvider"
                    }
                  },
                  "id": 66842,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:20:100"
                },
                {
                  "expression": {
                    "id": 66845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66843,
                      "name": "TREASURY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66736,
                      "src": "2612:8:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66844,
                      "name": "_TREASURY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66812,
                      "src": "2623:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2612:20:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66846,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:20:100"
                },
                {
                  "assignments": [
                    66848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66848,
                      "mutability": "mutable",
                      "name": "_lendingPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 66867,
                      "src": "2643:20:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66847,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2643:7:100",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66852,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66849,
                        "name": "_provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66810,
                        "src": "2666:9:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                          "typeString": "contract ILendingPoolAddressesProvider"
                        }
                      },
                      "id": 66850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLendingPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43423,
                      "src": "2666:24:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 66851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2666:26:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2643:49:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66854,
                          "name": "_lendingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66848,
                          "src": "2711:12:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 66857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2735:1:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 66856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2727:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66855,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2727:7:100",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2727:10:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2711:26:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30616464726573735f70726f7669646572",
                        "id": 66860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2739:19:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac7d526deb8bfd96e4e72282f45dc5909de9b4c42b20827d3d3627b2f8260e09",
                          "typeString": "literal_string \"0address_provider\""
                        },
                        "value": "0address_provider"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac7d526deb8bfd96e4e72282f45dc5909de9b4c42b20827d3d3627b2f8260e09",
                          "typeString": "literal_string \"0address_provider\""
                        }
                      ],
                      "id": 66853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2703:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2703:56:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66862,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:56:100"
                },
                {
                  "expression": {
                    "id": 66865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66863,
                      "name": "LENDING_POOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66734,
                      "src": "2770:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66864,
                      "name": "_lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66848,
                      "src": "2785:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2770:27:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66866,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:27:100"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "parameters": {
              "id": 66813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66808,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 66868,
                  "src": "2333:17:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66810,
                  "mutability": "mutable",
                  "name": "_provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 66868,
                  "src": "2352:39:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                    "typeString": "contract ILendingPoolAddressesProvider"
                  },
                  "typeName": {
                    "id": 66809,
                    "name": "ILendingPoolAddressesProvider",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 43499,
                    "src": "2352:29:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                      "typeString": "contract ILendingPoolAddressesProvider"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66812,
                  "mutability": "mutable",
                  "name": "_TREASURY",
                  "nodeType": "VariableDeclaration",
                  "scope": 66868,
                  "src": "2393:17:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2393:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2332:79:100"
            },
            "returnParameters": {
              "id": 66814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2412:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66877,
            "nodeType": "FunctionDefinition",
            "src": "2867:106:100",
            "nodes": [],
            "body": {
              "id": 66876,
              "nodeType": "Block",
              "src": "2939:34:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 66874,
                    "name": "REVISION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66741,
                    "src": "2957:8:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 66873,
                  "id": 66875,
                  "nodeType": "Return",
                  "src": "2950:15:100"
                }
              ]
            },
            "baseFunctions": [
              52900
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRevision",
            "overrides": {
              "id": 66870,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2912:8:100"
            },
            "parameters": {
              "id": 66869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2887:2:100"
            },
            "returnParameters": {
              "id": 66873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66872,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 66877,
                  "src": "2930:7:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2929:9:100"
            },
            "scope": 67247,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 66946,
            "nodeType": "FunctionDefinition",
            "src": "3059:1073:100",
            "nodes": [],
            "body": {
              "id": 66945,
              "nodeType": "Block",
              "src": "3110:1022:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66883,
                      "mutability": "mutable",
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 66945,
                      "src": "3121:15:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$40417",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 66882,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 40417,
                        "src": "3121:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66886,
                  "initialValue": {
                    "expression": {
                      "id": 66884,
                      "name": "trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66879,
                      "src": "3139:5:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$66761_calldata_ptr",
                        "typeString": "struct TokensConverter.Trade calldata"
                      }
                    },
                    "id": 66885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellToken",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66756,
                    "src": "3139:15:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$40417",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3121:33:100"
                },
                {
                  "assignments": [
                    66888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66888,
                      "mutability": "mutable",
                      "name": "boughtAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 66945,
                      "src": "3249:20:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66887,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3249:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66896,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66893,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3296:4:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokensConverter_$67247",
                              "typeString": "contract TokensConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokensConverter_$67247",
                              "typeString": "contract TokensConverter"
                            }
                          ],
                          "id": 66892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3288:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3288:7:100",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3288:13:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 66889,
                        "name": "CBETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66751,
                        "src": "3272:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 66890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40017,
                      "src": "3272:15:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3272:30:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3249:53:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 66900,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66879,
                              "src": "3578:5:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$66761_calldata_ptr",
                                "typeString": "struct TokensConverter.Trade calldata"
                              }
                            },
                            "id": 66901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "spender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66758,
                            "src": "3578:13:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 66905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "3601:2:100",
                                "subExpression": {
                                  "hexValue": "31",
                                  "id": 66904,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3602:1:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_minus_1_by_1",
                                  "typeString": "int_const -1"
                                }
                              ],
                              "id": 66903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3593:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 66902,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3593:7:100",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3593:11:100",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 66898,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66883,
                            "src": "3560:9:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$40417",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 66899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40077,
                          "src": "3560:17:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 66907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3560:45:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3552:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 66908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:54:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66909,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:54:100"
                },
                {
                  "assignments": [
                    66911,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66911,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 66945,
                      "src": "3788:12:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 66910,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3788:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 66919,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66916,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66879,
                          "src": "3835:5:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$66761_calldata_ptr",
                            "typeString": "struct TokensConverter.Trade calldata"
                          }
                        },
                        "id": 66917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "swapCallData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66760,
                        "src": "3835:18:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 66912,
                          "name": "exchangeProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66754,
                          "src": "3806:13:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 66913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3806:18:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 66915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 66914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3832:1:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "3806:28:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 66918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3806:48:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3787:67:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66921,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66911,
                        "src": "3873:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "535741505f43414c4c5f4641494c4544",
                        "id": 66922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3882:18:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2623443b04f7d4bc739ee47f9352ea397faab425b6ff26cf79ed464c8e4d164",
                          "typeString": "literal_string \"SWAP_CALL_FAILED\""
                        },
                        "value": "SWAP_CALL_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2623443b04f7d4bc739ee47f9352ea397faab425b6ff26cf79ed464c8e4d164",
                          "typeString": "literal_string \"SWAP_CALL_FAILED\""
                        }
                      ],
                      "id": 66920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3865:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3865:36:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66924,
                  "nodeType": "ExpressionStatement",
                  "src": "3865:36:100"
                },
                {
                  "expression": {
                    "id": 66936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66925,
                      "name": "boughtAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66888,
                      "src": "3995:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 66934,
                          "name": "boughtAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66888,
                          "src": "4045:12:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66930,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4034:4:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokensConverter_$67247",
                                    "typeString": "contract TokensConverter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokensConverter_$67247",
                                    "typeString": "contract TokensConverter"
                                  }
                                ],
                                "id": 66929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4026:7:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66928,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4026:7:100",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 66931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4026:13:100",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66926,
                              "name": "CBETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66751,
                              "src": "4010:5:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$40417",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 66927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40017,
                            "src": "4010:15:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4010:30:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 66933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40829,
                        "src": "4010:34:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 66935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4010:48:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3995:63:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66937,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:63:100"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66939,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66879,
                          "src": "4087:5:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$66761_calldata_ptr",
                            "typeString": "struct TokensConverter.Trade calldata"
                          }
                        },
                        "id": 66940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66756,
                        "src": "4087:15:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 66941,
                        "name": "CBETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66751,
                        "src": "4104:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 66942,
                        "name": "boughtAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66888,
                        "src": "4111:12:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66938,
                      "name": "BoughtTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66774,
                      "src": "4074:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$40417_$_t_contract$_ERC20_$40417_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,contract ERC20,uint256)"
                      }
                    },
                    "id": 66943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4074:50:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66944,
                  "nodeType": "EmitStatement",
                  "src": "4069:55:100"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_fillQuote",
            "parameters": {
              "id": 66880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66879,
                  "mutability": "mutable",
                  "name": "trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 66946,
                  "src": "3079:20:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$66761_calldata_ptr",
                    "typeString": "struct TokensConverter.Trade"
                  },
                  "typeName": {
                    "id": 66878,
                    "name": "Trade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 66761,
                    "src": "3079:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$66761_storage_ptr",
                      "typeString": "struct TokensConverter.Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:22:100"
            },
            "returnParameters": {
              "id": 66881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 67001,
            "nodeType": "FunctionDefinition",
            "src": "4218:788:100",
            "nodes": [],
            "body": {
              "id": 67000,
              "nodeType": "Block",
              "src": "4281:725:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66952,
                      "mutability": "mutable",
                      "name": "buyToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 67000,
                      "src": "4292:14:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$40417",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 66951,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 40417,
                        "src": "4292:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66954,
                  "initialValue": {
                    "id": 66953,
                    "name": "CBETH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66751,
                    "src": "4309:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$40417",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4292:22:100"
                },
                {
                  "assignments": [
                    66956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66956,
                      "mutability": "mutable",
                      "name": "boughtAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 67000,
                      "src": "4409:20:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4409:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66964,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 66961,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4459:4:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokensConverter_$67247",
                              "typeString": "contract TokensConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokensConverter_$67247",
                              "typeString": "contract TokensConverter"
                            }
                          ],
                          "id": 66960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4451:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66959,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4451:7:100",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4451:13:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 66957,
                        "name": "buyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66952,
                        "src": "4432:8:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 66958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40017,
                      "src": "4432:18:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 66963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4432:33:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4409:56:100"
                },
                {
                  "assignments": [
                    66966,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66966,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 67000,
                      "src": "4649:12:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 66965,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4649:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 66974,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66971,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66948,
                          "src": "4696:5:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SimpleTrade_$66766_calldata_ptr",
                            "typeString": "struct TokensConverter.SimpleTrade calldata"
                          }
                        },
                        "id": 66972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "swapCallData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66765,
                        "src": "4696:18:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 66967,
                          "name": "exchangeProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66754,
                          "src": "4667:13:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 66968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4667:18:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 66970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 66969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4693:1:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "4667:28:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 66973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4667:48:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4648:67:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66976,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66966,
                        "src": "4734:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53494d504c455f535741505f43414c4c5f4641494c4544",
                        "id": 66977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4743:25:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_438559ac9cacdecc6c7a32dd418820117da3e91cb66e5a82030fdab8c3ab0efa",
                          "typeString": "literal_string \"SIMPLE_SWAP_CALL_FAILED\""
                        },
                        "value": "SIMPLE_SWAP_CALL_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_438559ac9cacdecc6c7a32dd418820117da3e91cb66e5a82030fdab8c3ab0efa",
                          "typeString": "literal_string \"SIMPLE_SWAP_CALL_FAILED\""
                        }
                      ],
                      "id": 66975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4726:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:43:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66979,
                  "nodeType": "ExpressionStatement",
                  "src": "4726:43:100"
                },
                {
                  "expression": {
                    "id": 66991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66980,
                      "name": "boughtAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66956,
                      "src": "4863:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 66989,
                          "name": "boughtAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66956,
                          "src": "4916:12:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66985,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4905:4:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokensConverter_$67247",
                                    "typeString": "contract TokensConverter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokensConverter_$67247",
                                    "typeString": "contract TokensConverter"
                                  }
                                ],
                                "id": 66984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4897:7:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66983,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4897:7:100",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 66986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4897:13:100",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 66981,
                              "name": "buyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66952,
                              "src": "4878:8:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$40417",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 66982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40017,
                            "src": "4878:18:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 66987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:33:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 66988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40829,
                        "src": "4878:37:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 66990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4878:51:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4863:66:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 66992,
                  "nodeType": "ExpressionStatement",
                  "src": "4863:66:100"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66994,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66948,
                          "src": "4958:5:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SimpleTrade_$66766_calldata_ptr",
                            "typeString": "struct TokensConverter.SimpleTrade calldata"
                          }
                        },
                        "id": 66995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66763,
                        "src": "4958:15:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 66996,
                        "name": "buyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66952,
                        "src": "4975:8:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 66997,
                        "name": "boughtAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66956,
                        "src": "4985:12:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 66993,
                      "name": "BoughtTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66774,
                      "src": "4945:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$40417_$_t_contract$_ERC20_$40417_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,contract ERC20,uint256)"
                      }
                    },
                    "id": 66998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4945:53:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66999,
                  "nodeType": "EmitStatement",
                  "src": "4940:58:100"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_simpleFillQuote",
            "parameters": {
              "id": 66949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66948,
                  "mutability": "mutable",
                  "name": "trade",
                  "nodeType": "VariableDeclaration",
                  "scope": 67001,
                  "src": "4244:26:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SimpleTrade_$66766_calldata_ptr",
                    "typeString": "struct TokensConverter.SimpleTrade"
                  },
                  "typeName": {
                    "id": 66947,
                    "name": "SimpleTrade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 66766,
                    "src": "4244:11:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SimpleTrade_$66766_storage_ptr",
                      "typeString": "struct TokensConverter.SimpleTrade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4243:28:100"
            },
            "returnParameters": {
              "id": 66950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4281:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 67020,
            "nodeType": "FunctionDefinition",
            "src": "5066:153:100",
            "nodes": [],
            "body": {
              "id": 67019,
              "nodeType": "Block",
              "src": "5163:56:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67011,
                        "name": "LENDING_POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66734,
                        "src": "5188:12:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 67015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "5207:2:100",
                            "subExpression": {
                              "hexValue": "31",
                              "id": 67014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5208:1:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 67013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5202:4:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 67012,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "5202:4:100",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 67016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5202:8:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 67008,
                        "name": "CBETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66751,
                        "src": "5174:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 67010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40077,
                      "src": "5174:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 67017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5174:37:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67018,
                  "nodeType": "ExpressionStatement",
                  "src": "5174:37:100"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67006,
                "modifierName": {
                  "id": 67005,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 52894,
                  "src": "5151:11:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5151:11:100"
              }
            ],
            "name": "initialize",
            "parameters": {
              "id": 67004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67003,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 67020,
                  "src": "5096:38:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                    "typeString": "contract ILendingPoolAddressesProvider"
                  },
                  "typeName": {
                    "id": 67002,
                    "name": "ILendingPoolAddressesProvider",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 43499,
                    "src": "5096:29:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$43499",
                      "typeString": "contract ILendingPoolAddressesProvider"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5085:56:100"
            },
            "returnParameters": {
              "id": 67007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5163:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67032,
            "nodeType": "FunctionDefinition",
            "src": "5290:90:100",
            "nodes": [],
            "body": {
              "id": 67031,
              "nodeType": "Block",
              "src": "5329:51:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 67023,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66746,
                          "src": "5340:4:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH_$44420",
                            "typeString": "contract IWETH"
                          }
                        },
                        "id": 67025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44419,
                        "src": "5340:12:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 67028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 67026,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5360:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 67027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5360:9:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5340:30:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 67029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5340:32:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67030,
                  "nodeType": "ExpressionStatement",
                  "src": "5340:32:100"
                }
              ]
            },
            "functionSelector": "f6326fb3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositETH",
            "parameters": {
              "id": 67021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5309:2:100"
            },
            "returnParameters": {
              "id": 67022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5329:0:100"
            },
            "scope": 67247,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67084,
            "nodeType": "FunctionDefinition",
            "src": "5388:472:100",
            "nodes": [],
            "body": {
              "id": 67083,
              "nodeType": "Block",
              "src": "5414:446:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67036,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 67083,
                      "src": "5425:12:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67035,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5425:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67044,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 67041,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5464:4:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokensConverter_$67247",
                              "typeString": "contract TokensConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokensConverter_$67247",
                              "typeString": "contract TokensConverter"
                            }
                          ],
                          "id": 67040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5456:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67039,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5456:7:100",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 67042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5456:13:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 67037,
                        "name": "CBETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66751,
                        "src": "5440:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$40417",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 67038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40017,
                      "src": "5440:15:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 67043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5440:30:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5425:45:100"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67045,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67036,
                      "src": "5485:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 67046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5495:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5485:11:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67082,
                  "nodeType": "IfStatement",
                  "src": "5481:372:100",
                  "trueBody": {
                    "id": 67081,
                    "nodeType": "Block",
                    "src": "5498:355:100",
                    "statements": [
                      {
                        "assignments": [
                          67049
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67049,
                            "mutability": "mutable",
                            "name": "treasuryShare",
                            "nodeType": "VariableDeclaration",
                            "scope": 67081,
                            "src": "5513:18:100",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 67048,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5513:4:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 67054,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "35",
                              "id": 67052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5546:1:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              }
                            ],
                            "expression": {
                              "id": 67050,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67036,
                              "src": "5534:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 67051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40909,
                            "src": "5534:11:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 67053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5534:14:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5513:35:100"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 67058,
                              "name": "TREASURY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66736,
                              "src": "5582:8:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 67059,
                              "name": "treasuryShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67049,
                              "src": "5592:13:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 67055,
                              "name": "CBETH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66751,
                              "src": "5563:5:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$40417",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 67057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40663,
                            "src": "5563:18:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$40495_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$40495_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 67060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5563:43:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67061,
                        "nodeType": "ExpressionStatement",
                        "src": "5563:43:100"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 67068,
                                  "name": "CBETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66751,
                                  "src": "5684:5:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$40417",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$40417",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 67067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5676:7:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 67066,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5676:7:100",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5676:14:100",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 67072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 67070,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67036,
                                "src": "5709:7:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 67071,
                                "name": "treasuryShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67049,
                                "src": "5719:13:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5709:23:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 67073,
                              "name": "STAKING",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66732,
                              "src": "5751:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 67074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5777:1:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 67063,
                                  "name": "LENDING_POOL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66734,
                                  "src": "5636:12:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 67062,
                                "name": "ILendingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43338,
                                "src": "5623:12:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILendingPool_$43338_$",
                                  "typeString": "type(contract ILendingPool)"
                                }
                              },
                              "id": 67064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5623:26:100",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$43338",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 67065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43117,
                            "src": "5623:34:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                              "typeString": "function (address,uint256,address,uint16) external"
                            }
                          },
                          "id": 67075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5623:170:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67076,
                        "nodeType": "ExpressionStatement",
                        "src": "5623:170:100"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 67078,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67036,
                              "src": "5833:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 67077,
                            "name": "ClaimedRewardTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66778,
                            "src": "5813:19:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 67079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5813:28:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67080,
                        "nodeType": "EmitStatement",
                        "src": "5808:33:100"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "parameters": {
              "id": 67033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5402:2:100"
            },
            "returnParameters": {
              "id": 67034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5414:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67103,
            "nodeType": "FunctionDefinition",
            "src": "6005:132:100",
            "nodes": [],
            "body": {
              "id": 67102,
              "nodeType": "Block",
              "src": "6075:62:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 67096,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6109:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 67097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6109:10:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 67098,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67088,
                            "src": "6121:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 67094,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67086,
                            "src": "6094:5:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$40417",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 67095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40038,
                          "src": "6094:14:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 67099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6094:34:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 67093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6086:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 67100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6086:43:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67101,
                  "nodeType": "ExpressionStatement",
                  "src": "6086:43:100"
                }
              ]
            },
            "functionSelector": "b29a8140",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67091,
                "modifierName": {
                  "id": 67090,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66802,
                  "src": "6065:9:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6065:9:100"
              }
            ],
            "name": "recoverToken",
            "parameters": {
              "id": 67089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67086,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 67103,
                  "src": "6027:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$40417",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 67085,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40417,
                    "src": "6027:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$40417",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67088,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 67103,
                  "src": "6040:14:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6040:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6026:29:100"
            },
            "returnParameters": {
              "id": 67092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6075:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67119,
            "nodeType": "FunctionDefinition",
            "src": "6208:102:100",
            "nodes": [],
            "body": {
              "id": 67118,
              "nodeType": "Block",
              "src": "6264:46:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67115,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67105,
                        "src": "6295:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 67110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6275:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6275:10:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 67114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6275:19:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 67116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6275:27:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67117,
                  "nodeType": "ExpressionStatement",
                  "src": "6275:27:100"
                }
              ]
            },
            "functionSelector": "f14210a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67108,
                "modifierName": {
                  "id": 67107,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66802,
                  "src": "6254:9:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6254:9:100"
              }
            ],
            "name": "withdrawETH",
            "parameters": {
              "id": 67106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67105,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 67119,
                  "src": "6229:14:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6229:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6228:16:100"
            },
            "returnParameters": {
              "id": 67109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6264:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67145,
            "nodeType": "FunctionDefinition",
            "src": "6352:166:100",
            "nodes": [],
            "body": {
              "id": 67144,
              "nodeType": "Block",
              "src": "6410:108:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 67136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 67129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67127,
                            "name": "keeper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66730,
                            "src": "6429:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 67128,
                            "name": "_keeper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67121,
                            "src": "6439:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6429:17:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 67135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 67130,
                            "name": "_keeper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67121,
                            "src": "6450:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 67133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6469:1:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 67132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6461:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 67131,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6461:7:100",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 67134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6461:10:100",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "6450:21:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6429:42:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "216b6565706572",
                        "id": 67137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6473:9:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77d39ffdd3fbba2b1437da9200218d174698c82ca2aa72af2e4a85db3820fb08",
                          "typeString": "literal_string \"!keeper\""
                        },
                        "value": "!keeper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77d39ffdd3fbba2b1437da9200218d174698c82ca2aa72af2e4a85db3820fb08",
                          "typeString": "literal_string \"!keeper\""
                        }
                      ],
                      "id": 67126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6421:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6421:62:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67139,
                  "nodeType": "ExpressionStatement",
                  "src": "6421:62:100"
                },
                {
                  "expression": {
                    "id": 67142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67140,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66730,
                      "src": "6494:6:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67141,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67121,
                      "src": "6503:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6494:16:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67143,
                  "nodeType": "ExpressionStatement",
                  "src": "6494:16:100"
                }
              ]
            },
            "functionSelector": "97790217",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67124,
                "modifierName": {
                  "id": 67123,
                  "name": "onlyAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66802,
                  "src": "6400:9:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6400:9:100"
              }
            ],
            "name": "updateKeeper",
            "parameters": {
              "id": 67122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67121,
                  "mutability": "mutable",
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 67145,
                  "src": "6374:15:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6374:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6373:17:100"
            },
            "returnParameters": {
              "id": 67125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6410:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67176,
            "nodeType": "FunctionDefinition",
            "src": "6577:207:100",
            "nodes": [],
            "body": {
              "id": 67175,
              "nodeType": "Block",
              "src": "6650:134:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67154,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 67175,
                      "src": "6661:11:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67153,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6661:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67157,
                  "initialValue": {
                    "expression": {
                      "id": 67155,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67148,
                      "src": "6675:6:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Trade_$66761_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct TokensConverter.Trade calldata[] calldata"
                      }
                    },
                    "id": 67156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6675:13:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6661:27:100"
                },
                {
                  "body": {
                    "id": 67173,
                    "nodeType": "Block",
                    "src": "6729:48:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 67168,
                                "name": "trades",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67148,
                                "src": "6755:6:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Trade_$66761_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct TokensConverter.Trade calldata[] calldata"
                                }
                              },
                              "id": 67170,
                              "indexExpression": {
                                "id": 67169,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67159,
                                "src": "6762:1:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6755:9:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$66761_calldata_ptr",
                                "typeString": "struct TokensConverter.Trade calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Trade_$66761_calldata_ptr",
                                "typeString": "struct TokensConverter.Trade calldata"
                              }
                            ],
                            "id": 67167,
                            "name": "_fillQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66946,
                            "src": "6744:10:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Trade_$66761_calldata_ptr_$returns$__$",
                              "typeString": "function (struct TokensConverter.Trade calldata)"
                            }
                          },
                          "id": 67171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6744:21:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67172,
                        "nodeType": "ExpressionStatement",
                        "src": "6744:21:100"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67161,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67159,
                      "src": "6712:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67162,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67154,
                      "src": "6716:6:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6712:10:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67174,
                  "initializationExpression": {
                    "assignments": [
                      67159
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67159,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 67174,
                        "src": "6704:6:100",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 67158,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6704:4:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67160,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6704:6:100"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6724:3:100",
                      "subExpression": {
                        "id": 67164,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67159,
                        "src": "6726:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67166,
                    "nodeType": "ExpressionStatement",
                    "src": "6724:3:100"
                  },
                  "nodeType": "ForStatement",
                  "src": "6699:78:100"
                }
              ]
            },
            "functionSelector": "c89d3aba",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67151,
                "modifierName": {
                  "id": 67150,
                  "name": "onlyKeeper",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66789,
                  "src": "6639:10:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6639:10:100"
              }
            ],
            "name": "convertWithSpender",
            "parameters": {
              "id": 67149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67148,
                  "mutability": "mutable",
                  "name": "trades",
                  "nodeType": "VariableDeclaration",
                  "scope": 67176,
                  "src": "6605:23:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Trade_$66761_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TokensConverter.Trade[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67146,
                      "name": "Trade",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 66761,
                      "src": "6605:5:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$66761_storage_ptr",
                        "typeString": "struct TokensConverter.Trade"
                      }
                    },
                    "id": 67147,
                    "nodeType": "ArrayTypeName",
                    "src": "6605:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Trade_$66761_storage_$dyn_storage_ptr",
                      "typeString": "struct TokensConverter.Trade[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6604:25:100"
            },
            "returnParameters": {
              "id": 67152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6650:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67207,
            "nodeType": "FunctionDefinition",
            "src": "6792:208:100",
            "nodes": [],
            "body": {
              "id": 67206,
              "nodeType": "Block",
              "src": "6860:140:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67185,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 67206,
                      "src": "6871:11:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67184,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6871:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67188,
                  "initialValue": {
                    "expression": {
                      "id": 67186,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67179,
                      "src": "6885:6:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_SimpleTrade_$66766_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct TokensConverter.SimpleTrade calldata[] calldata"
                      }
                    },
                    "id": 67187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6885:13:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6871:27:100"
                },
                {
                  "body": {
                    "id": 67204,
                    "nodeType": "Block",
                    "src": "6939:54:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 67199,
                                "name": "trades",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67179,
                                "src": "6971:6:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_SimpleTrade_$66766_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct TokensConverter.SimpleTrade calldata[] calldata"
                                }
                              },
                              "id": 67201,
                              "indexExpression": {
                                "id": 67200,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67190,
                                "src": "6978:1:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6971:9:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SimpleTrade_$66766_calldata_ptr",
                                "typeString": "struct TokensConverter.SimpleTrade calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_SimpleTrade_$66766_calldata_ptr",
                                "typeString": "struct TokensConverter.SimpleTrade calldata"
                              }
                            ],
                            "id": 67198,
                            "name": "_simpleFillQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67001,
                            "src": "6954:16:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SimpleTrade_$66766_calldata_ptr_$returns$__$",
                              "typeString": "function (struct TokensConverter.SimpleTrade calldata)"
                            }
                          },
                          "id": 67202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6954:27:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67203,
                        "nodeType": "ExpressionStatement",
                        "src": "6954:27:100"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67192,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67190,
                      "src": "6922:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67193,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67185,
                      "src": "6926:6:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6922:10:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67205,
                  "initializationExpression": {
                    "assignments": [
                      67190
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67190,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 67205,
                        "src": "6914:6:100",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 67189,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6914:4:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67191,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6914:6:100"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6934:3:100",
                      "subExpression": {
                        "id": 67195,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67190,
                        "src": "6936:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67197,
                    "nodeType": "ExpressionStatement",
                    "src": "6934:3:100"
                  },
                  "nodeType": "ForStatement",
                  "src": "6909:84:100"
                }
              ]
            },
            "functionSelector": "6b926c07",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67182,
                "modifierName": {
                  "id": 67181,
                  "name": "onlyKeeper",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66789,
                  "src": "6849:10:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6849:10:100"
              }
            ],
            "name": "convert",
            "parameters": {
              "id": 67180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67179,
                  "mutability": "mutable",
                  "name": "trades",
                  "nodeType": "VariableDeclaration",
                  "scope": 67207,
                  "src": "6809:29:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SimpleTrade_$66766_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TokensConverter.SimpleTrade[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67177,
                      "name": "SimpleTrade",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 66766,
                      "src": "6809:11:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SimpleTrade_$66766_storage_ptr",
                        "typeString": "struct TokensConverter.SimpleTrade"
                      }
                    },
                    "id": 67178,
                    "nodeType": "ArrayTypeName",
                    "src": "6809:13:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SimpleTrade_$66766_storage_$dyn_storage_ptr",
                      "typeString": "struct TokensConverter.SimpleTrade[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6808:31:100"
            },
            "returnParameters": {
              "id": 67183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6860:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67246,
            "nodeType": "FunctionDefinition",
            "src": "7008:237:100",
            "nodes": [],
            "body": {
              "id": 67245,
              "nodeType": "Block",
              "src": "7076:169:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67216
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67216,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 67245,
                      "src": "7087:11:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67215,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7087:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67219,
                  "initialValue": {
                    "expression": {
                      "id": 67217,
                      "name": "_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67210,
                      "src": "7101:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_ERC20_$40417_$dyn_calldata_ptr",
                        "typeString": "contract ERC20[] calldata"
                      }
                    },
                    "id": 67218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7101:14:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7087:28:100"
                },
                {
                  "body": {
                    "id": 67243,
                    "nodeType": "Block",
                    "src": "7156:82:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 67234,
                                  "name": "exchangeProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66754,
                                  "src": "7198:13:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 67238,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "-",
                                      "prefix": true,
                                      "src": "7221:2:100",
                                      "subExpression": {
                                        "hexValue": "31",
                                        "id": 67237,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7222:1:100",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_minus_1_by_1",
                                        "typeString": "int_const -1"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_minus_1_by_1",
                                        "typeString": "int_const -1"
                                      }
                                    ],
                                    "id": 67236,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7213:7:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 67235,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7213:7:100",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 67239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7213:11:100",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "id": 67230,
                                    "name": "_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67210,
                                    "src": "7179:7:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC20_$40417_$dyn_calldata_ptr",
                                      "typeString": "contract ERC20[] calldata"
                                    }
                                  },
                                  "id": 67232,
                                  "indexExpression": {
                                    "id": 67231,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67221,
                                    "src": "7187:1:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7179:10:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$40417",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 67233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "approve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40077,
                                "src": "7179:18:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 67240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7179:46:100",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 67229,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7171:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 67241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7171:55:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67242,
                        "nodeType": "ExpressionStatement",
                        "src": "7171:55:100"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67223,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67221,
                      "src": "7139:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 67224,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67216,
                      "src": "7143:6:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7139:10:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67244,
                  "initializationExpression": {
                    "assignments": [
                      67221
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 67221,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 67244,
                        "src": "7131:6:100",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 67220,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7131:4:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 67222,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7131:6:100"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 67227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7151:3:100",
                      "subExpression": {
                        "id": 67226,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67221,
                        "src": "7153:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67228,
                    "nodeType": "ExpressionStatement",
                    "src": "7151:3:100"
                  },
                  "nodeType": "ForStatement",
                  "src": "7126:112:100"
                }
              ]
            },
            "functionSelector": "0b692dba",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67213,
                "modifierName": {
                  "id": 67212,
                  "name": "onlyKeeper",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66789,
                  "src": "7065:10:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7065:10:100"
              }
            ],
            "name": "approveProxy",
            "parameters": {
              "id": 67211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67210,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 67246,
                  "src": "7030:24:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$40417_$dyn_calldata_ptr",
                    "typeString": "contract ERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67208,
                      "name": "ERC20",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 40417,
                      "src": "7030:5:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$40417",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 67209,
                    "nodeType": "ArrayTypeName",
                    "src": "7030:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$40417_$dyn_storage_ptr",
                      "typeString": "contract ERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7029:26:100"
            },
            "returnParameters": {
              "id": 67214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7076:0:100"
            },
            "scope": 67247,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66721,
              "name": "VersionedInitializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 52920,
              "src": "770:22:100",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VersionedInitializable_$52920",
                "typeString": "contract VersionedInitializable"
              }
            },
            "id": 66722,
            "nodeType": "InheritanceSpecifier",
            "src": "770:22:100"
          }
        ],
        "contractDependencies": [
          52920
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          67247,
          52920
        ],
        "name": "TokensConverter",
        "scope": 67248
      }
    ],
    "license": "agpl-3.0"
  },
  "id": 100
}